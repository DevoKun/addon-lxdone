#!/usr/bin/python

import lxd_common as lc
t0 = lc.time()
client = lc.client
VM_ID = lc.sys.argv[1]
container = client.containers.get('one-' + VM_ID)

# READ_XML
dicc = lc.xml_start(container.config['user.xml'])
DISK_TYPE = lc.xml_getvalue('DISK/TYPE', dicc)
CONTEXT_DISK_ID = lc.xml_getvalue_plus('CONTEXT/DISK_ID', dicc)

# CONTAINER_SHUTDOWN
if len(lc.sys.argv) == 3:
    container.stop(force=True, wait=True)
else:
    container.stop(wait=True)

# DETACH EXTRA STORAGE
num_hdds = len(DISK_TYPE)
if num_hdds > 1:
    DISK_TARGET = lc.xml_getvalue('DISK/TARGET', dicc)
    for x in xrange(1, num_hdds):
        source = lc.unmap(container.devices, DISK_TARGET[x])
        source = lc.storage_lazer(source)
        lc.storage_sysunmap(DISK_TYPE[x], source)

if CONTEXT_DISK_ID:
    source = lc.unmap(container.devices, 'CONTEXT')
    source = source['path']
    lc.storage_sysunmap('FILE', source)

# DETACH ROOTFS
root_source = container.config['user.rootfs']
lc.storage_rootfs_umount(DISK_TYPE[0], root_source)

# CONTAINER_DESTROY
container.delete()

lc.clock(VM_ID, t0)
